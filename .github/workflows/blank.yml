name: "Terraform GitHub action"
on:
  push:
    branches:
      - main
    paths:
      - 'environments/prod/**'
  pull_request:
    branches:
      - main
    paths:
      - 'environments/prod/**'

permissions:
  id-token: write # This is required for aws oidc connection
  contents: read # This is required for actions/checkout
  pull-requests: write # This is required for gh bot to comment PR

env:
  AWS_REGION: ${{ vars.AWS_REGION }}
  TERRAFORM_GITHUB_ACTIONS_ROLE_NAME: ${{ secrets.TERRAFORM_GITHUB_ACTIONS_ROLE_NAME }}
  TERRAFORM_VERSION: ${{ vars.TF_VERSION }}
  TERRAFORM_DIR: ${{ vars.TERRAFORM_DIR }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

jobs:
  terraform-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Terraform Format Check
      run: terraform fmt -check

  terraform-plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    needs: terraform-check
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.TERRAFORM_GITHUB_ACTIONS_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan

  terraform-apply:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TERRAFORM_DIR }}
    needs: terraform-plan
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ env.TERRAFORM_GITHUB_ACTIONS_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}
        role-session-name: GitHub-OIDC-TERRAFORM

    - name: Terraform Init
      run: terraform init

    - name: Terraform Apply
      run: terraform apply -auto-approve

